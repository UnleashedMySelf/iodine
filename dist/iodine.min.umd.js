!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e||self).iodine=t()}(this,function(){function e(r,s,n){if(!r.s){if(n instanceof t){if(!n.s)return void(n.o=e.bind(null,r,s));1&s&&(s=n.s),n=n.v}if(n&&n.then)return void n.then(e.bind(null,r,s),e.bind(null,r,2));r.s=s,r.v=n;const a=r.o;a&&a(r)}}const t=/*#__PURE__*/function(){function t(){}return t.prototype.then=function(r,s){const n=new t,a=this.s;if(a){const t=1&a?r:s;if(t){try{e(n,1,t(this.v))}catch(t){e(n,2,t)}return n}return this}return this.o=function(t){try{const a=t.v;1&t.s?e(n,1,r?r(a):a):s?e(n,1,s(a)):e(n,2,a)}catch(t){e(n,2,t)}},n},t}();class r{constructor(){this.locale=void 0,this.messages=this._defaultMessages(),this.defaultFieldName=this._defaultFieldName()}_dateCompare(e,t,r,s=!1){return!!this.assertDate(e)&&!(!this.assertDate(t)&&!this.assertInteger(t))&&(t="number"==typeof t?t:t.getTime(),"less"===r&&s?e.getTime()<=t:"less"!==r||s?"more"===r&&s?e.getTime()>=t:"more"!==r||s?void 0:e.getTime()>t:e.getTime()<t)}_defaultFieldName(){return"Value"}_defaultMessages(){return{after:"The date must be after: '[PARAM]'",afterOrEqual:"The date must be after or equal to: '[PARAM]'",array:"[FIELD] must be an array",before:"The date must be before: '[PARAM]'",beforeOrEqual:"The date must be before or equal to: '[PARAM]'",boolean:"[FIELD] must be true or false",date:"[FIELD] must be a date",different:"[FIELD] must be different to '[PARAM]'",endsWith:"[FIELD] must end with '[PARAM]'",email:"[FIELD] must be a valid email address",falsy:"[FIELD] must be a falsy value (false, 'false', 0 or '0')",in:"[FIELD] must be one of the following options: [PARAM]",integer:"[FIELD] must be an integer",json:"[FIELD] must be a parsable JSON object string",max:"[FIELD] must be less than or equal to [PARAM]",min:"[FIELD] must be greater than or equal to [PARAM]",maxLength:"[FIELD] must not be greater than '[PARAM]' in character length",minLength:"[FIELD] must not be less than '[PARAM]' character length",notIn:"[FIELD] must not be one of the following options: [PARAM]",numeric:"[FIELD] must be numeric",optional:"[FIELD] is optional",regexMatch:"[FIELD] must satisify the regular expression: [PARAM]",required:"[FIELD] must be present",same:"[FIELD] must be '[PARAM]'",startsWith:"[FIELD] must start with '[PARAM]'",string:"[FIELD] must be a string",truthy:"[FIELD] must be a truthy value (true, 'true', 1 or '1')",url:"[FIELD] must be a valid url",uuid:"[FIELD] must be a valid UUID"}}_prepare(e,t=[]){return t.length?"optional"===t[0]&&this.assertOptional(e)?[]:t.filter(e=>"optional"!==e).map(e=>[e,this._titleCase(e.split(":").shift()),e.split(":").slice(1)]):[]}_titleCase(e){return`${e[0].toUpperCase()}${e.slice(1)}`}addRule(e,t){r.prototype[`assert${this._titleCase(e)}`]=t}assertAfter(e,t){return this._dateCompare(e,t,"more",!1)}assertAfterOrEqual(e,t){return this._dateCompare(e,t,"more",!0)}assertArray(e){return Array.isArray(e)}assertBefore(e,t){return this._dateCompare(e,t,"less",!1)}assertBeforeOrEqual(e,t){return this._dateCompare(e,t,"less",!0)}assertBoolean(e){return[!0,!1].includes(e)}assertDate(e){return e&&"[object Date]"===Object.prototype.toString.call(e)&&!isNaN(e)}assertDifferent(e,t){return e!=t}assertEndsWith(e,t){return this.assertString(e)&&e.endsWith(t)}assertEmail(e){return new RegExp("^[a-zA-Z0-9.!#$%&'+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:.[a-zA-Z0-9-]+)$").test(String(e).toLowerCase())}assertFalsy(e){return[0,"0",!1,"false"].includes(e)}assertIn(e,t){return("string"==typeof t?t.split(","):t).includes(e)}assertInteger(e){return Number.isInteger(e)&&parseInt(e).toString()===e.toString()}assertJson(e){try{return"object"==typeof JSON.parse(e)}catch(e){return!1}}assertMax(e,t){return parseFloat(e)<=t}assertMin(e,t){return parseFloat(e)>=t}assertMaxLength(e,t){return"string"==typeof e&&e.length<=t}assertMinLength(e,t){return"string"==typeof e&&e.length>=t}assertNotIn(e,t){return!this.assertIn(e,t)}assertNumeric(e){return!isNaN(parseFloat(e))&&isFinite(e)}assertOptional(e){return[null,void 0,""].includes(e)}assertRegexMatch(e,t){return new RegExp(t).test(String(e))}assertRequired(e){return!this.assertOptional(e)}assertSame(e,t){return e==t}assertStartsWith(e,t){return this.assertString(e)&&e.startsWith(t)}assertString(e){return"string"==typeof e}assertTruthy(e){return[1,"1",!0,"true"].includes(e)}assertUrl(e){return new RegExp("^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$").test(String(e).toLowerCase())}assertUuid(e){return new RegExp("^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$").test(String(e).toLowerCase())}getErrorMessage(e,t){let{param:r,field:s}="object"==typeof t?t:{param:t,field:void 0};const n=e.split(":");let a=n.shift();r=r||n.join(":"),["after","afterOrEqual","before","beforeOrEqual"].includes(a)&&(r=new Date(parseInt(r)).toLocaleTimeString(this.locale,{year:"numeric",month:"short",day:"numeric",hour:"2-digit",minute:"numeric",hour12:!1}));let i=[null,void 0,""].includes(r)?this.messages[a]:this.messages[a].replace("[PARAM]",r);return[null,void 0,""].includes(s)?i.replace("[FIELD]",this.defaultFieldName):i.replace("[FIELD]",s)}passes(e,t){return!0===this.validate(e,t)}passesAsync(e,t){try{return Promise.resolve(this.validateAsync(e,t)).then(function(e){return!0===e})}catch(e){return Promise.reject(e)}}setErrorMessages(e){this.messages=e}setErrorMessage(e,t){this.messages[e]=t}setLocale(e){this.locale=e}setDefaultFieldName(e){this.defaultFieldName=e}validate(e,t){for(let r in t=this._prepare(e,t))if(!this[`assert${t[r][1]}`].apply(this,[e,t[r][2].join(":")]))return t[r][0];return!0}validateAsync(r,s){try{let n;const a=this,i=function(i,o,u){var l=[];for(var f in i)l.push(f);return function(r,s,n){var a,i,o=-1;return function u(l){try{for(;++o<r.length&&(!n||!n());)if((l=s(o))&&l.then){if(!((f=l)instanceof t&&1&f.s))return void l.then(u,i||(i=e.bind(null,a=new t,2)));l=l.v}a?e(a,1,l):a=l}catch(r){e(a||(a=new t),2,r)}var f}(),a}(l,function(e){return t=l[e],Promise.resolve(a[`assert${s[t][1]}`].apply(a,[r,s[t][2].join(":")])).then(function(e){return function(){if(!e)return Promise.resolve(s[t][0]).then(function(e){return n=1,e})}()});var t},function(){return n})}(s=a._prepare(r,s));return Promise.resolve(i&&i.then?i.then(function(e){return!n||e}):!n||i)}catch(e){return Promise.reject(e)}}}return"undefined"!=typeof window&&(window.Iodine=new r),r});
//# sourceMappingURL=iodine.min.umd.js.map
